events {

}
# -------- Define stream Services -------- #
stream {

}
# -------- Define HTTP Services -------- #
http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    
    # Global Settings for HTTP Servers 
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
    error_log  /var/log/nginx/error.log warn;
    access_log  /var/log/nginx/access.log main;
    client_max_body_size 1024M;
    proxy_cache_path /etc/nginx/cache keys_zone=one:10m;
    error_page 400 401 402 403 = /web/error/40x.html;

    # HTTP Servers 
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        rewrite ^(.*) https://$host:443$1 permanent;
    }
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        ssl_certificate /usr/share/nginx/ssl/nginx.crt;
        ssl_certificate_key /usr/share/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;
        root /usr/share/nginx/www/;

        # ------ Internal Services ------ #
        location = / {
            rewrite ^ /web;
        } 

        location /web {
            proxy_pass http://server:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /app {
            proxy_pass http://server:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /socket.io/ {
            proxy_pass http://server:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}

